{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Desktop\\\\React-chatvision\\\\chatvision-web\\\\src\\\\code_explainer.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\";\nimport Navbar from \"./navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SYSTEM_MESSAGE = \"You are a virtual assistant that explains the functionality of some given code in simple words. Start with a short overview of the code, followed by a detailed explanation using bullet points, followed by a list of errors (if any).\";\nexport default function Code() {\n  _s();\n  const [history, setHistory] = useState([{\n    role: \"system\",\n    content: SYSTEM_MESSAGE\n  }]);\n  const [language, setLanguage] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [userAns, setUserAns] = useState(\"\");\n  const {\n    Configuration,\n    OpenAIApi\n  } = require(\"openai\");\n  const configuration = new Configuration({\n    apiKey: \"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\"\n  });\n  const sendPrompt = async () => {\n    if (!language) {\n      alert(\"Provide a topic\");\n      return;\n    }\n    const message = `The language provided is ${language} and the code given is ${code}. Please start the interview`;\n    const updatedMessages = [...history, {\n      role: \"user\",\n      content: message\n    }];\n    setHistory(updatedMessages);\n    const openai = new OpenAIApi(configuration);\n    try {\n      const completion = await openai.createChatCompletion({\n        model: \"gpt-3.5-turbo\",\n        messages: updatedMessages\n      });\n      const botMessage = completion.data.choices[0].message;\n      const updatedMessages2 = [...updatedMessages, botMessage];\n      setHistory(updatedMessages2);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const sendRequest = async () => {\n    if (!userAns) {\n      alert(\"Please Give an Answer\");\n      return;\n    }\n    const updatedMessages = [...history, {\n      role: \"user\",\n      content: userAns\n    }];\n    setHistory(updatedMessages);\n    setUserAns(\"\");\n    const openai = new OpenAIApi(configuration);\n    try {\n      const completion = await openai.createChatCompletion({\n        model: \"gpt-3.5-turbo\",\n        messages: updatedMessages\n      });\n      const botMessage = completion.data.choices[0].message;\n      const updatedMessages2 = [...updatedMessages, botMessage];\n      setHistory(updatedMessages2);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"dropdownDefaultButton\",\n      \"data-dropdown-toggle\": \"dropdown\",\n      class: \"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n      type: \"button\",\n      children: [\"Dropdown button \", /*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"w-4 h-4 ml-2\",\n        \"aria-hidden\": \"true\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          \"stroke-linecap\": \"round\",\n          \"stroke-linejoin\": \"round\",\n          \"stroke-width\": \"2\",\n          d: \"M19 9l-7 7-7-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 478\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 344\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dropdown\",\n      class: \"z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"py-2 text-sm text-gray-700 dark:text-gray-200\",\n        \"aria-labelledby\": \"dropdownDefaultButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            class: \"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            class: \"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            class: \"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\",\n            children: \"Earnings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            class: \"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\",\n            children: \"Sign out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(Code, \"iDiAylfkEi3kqLlBRFvPh1P9H24=\");\n_c = Code;\nvar _c;\n$RefreshReg$(_c, \"Code\");","map":{"version":3,"names":["useState","ReactMarkdown","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","SYSTEM_MESSAGE","Code","_s","history","setHistory","role","content","language","setLanguage","code","setCode","userAns","setUserAns","Configuration","OpenAIApi","require","configuration","apiKey","sendPrompt","alert","message","updatedMessages","openai","completion","createChatCompletion","model","messages","botMessage","data","choices","updatedMessages2","error","console","log","sendRequest","children","id","class","type","fill","stroke","viewBox","xmlns","d","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["C:/Users/priya/Desktop/React-chatvision/chatvision-web/src/code_explainer.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\";\r\nimport Navbar from \"./navbar\";\r\n\r\nconst SYSTEM_MESSAGE = \"You are a virtual assistant that explains the functionality of some given code in simple words. Start with a short overview of the code, followed by a detailed explanation using bullet points, followed by a list of errors (if any).\"\r\nexport default function Code() {\r\n    const [history,setHistory] = useState([{role:\"system\",content:SYSTEM_MESSAGE}]);\r\n    const [language,setLanguage] = useState(\"\");\r\n    const [code,setCode] = useState(\"\");\r\n    const [userAns,setUserAns] = useState(\"\");\r\n\r\n    const { Configuration, OpenAIApi } = require(\"openai\");\r\n  const configuration = new Configuration({\r\n    apiKey: \"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\",\r\n  });\r\n\r\n\r\n    const sendPrompt = async () =>{\r\n        if(!language){\r\n            alert(\"Provide a topic\");\r\n            return;\r\n        }\r\n        const message = `The language provided is ${language} and the code given is ${code}. Please start the interview`\r\n\r\n        const updatedMessages = [\r\n          ...history,\r\n          {\r\n            role: \"user\",\r\n            content: message,\r\n          },\r\n        ];\r\n        setHistory(updatedMessages)\r\n        const openai = new OpenAIApi(configuration);\r\n        try{\r\n            const completion = await openai.createChatCompletion({\r\n              model: \"gpt-3.5-turbo\",\r\n              messages: updatedMessages,\r\n            });\r\n            const botMessage = completion.data.choices[0].message;\r\n            const updatedMessages2 = [\r\n              ...updatedMessages,\r\n              botMessage\r\n            ];\r\n            setHistory(updatedMessages2);\r\n        }\r\n        catch(error){\r\n          console.log(error);\r\n        }\r\n    }\r\n\r\n    const sendRequest = async () => {\r\n        if(!userAns){\r\n            alert(\"Please Give an Answer\");\r\n            return;\r\n        }\r\n        const updatedMessages = [\r\n            ...history,\r\n            {\r\n              role: \"user\",\r\n              content: userAns,\r\n            },\r\n          ];\r\n        setHistory(updatedMessages);\r\n        setUserAns(\"\");\r\n        const openai = new OpenAIApi(configuration);\r\n        try{\r\n            const completion = await openai.createChatCompletion({\r\n              model: \"gpt-3.5-turbo\",\r\n              messages: updatedMessages,\r\n            });\r\n            const botMessage = completion.data.choices[0].message;\r\n            const updatedMessages2 = [\r\n              ...updatedMessages,\r\n              botMessage\r\n            ];\r\n            setHistory(updatedMessages2);\r\n        }\r\n        catch(error){\r\n          console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return <>\r\n\r\n\r\n<button id=\"dropdownDefaultButton\" data-dropdown-toggle=\"dropdown\" class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\" type=\"button\">Dropdown button <svg class=\"w-4 h-4 ml-2\" aria-hidden=\"true\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path></svg></button>\r\n<div id=\"dropdown\" class=\"z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700\">\r\n    <ul class=\"py-2 text-sm text-gray-700 dark:text-gray-200\" aria-labelledby=\"dropdownDefaultButton\">\r\n      <li>\r\n        <a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">Dashboard</a>\r\n      </li>\r\n      <li>\r\n        <a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">Settings</a>\r\n      </li>\r\n      <li>\r\n        <a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">Earnings</a>\r\n      </li>\r\n      <li>\r\n        <a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">Sign out</a>\r\n      </li>\r\n    </ul>\r\n</div>\r\n\r\n    </>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}