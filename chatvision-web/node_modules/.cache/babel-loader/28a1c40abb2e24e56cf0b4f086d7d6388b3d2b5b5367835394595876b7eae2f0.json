{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Desktop\\\\try\\\\chatvision-web\\\\src\\\\App.js\";\nimport * as React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport Stable from './stable';\nimport ChatBot from './chatbot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/stable\",\n        element: /*#__PURE__*/_jsxDEV(Stable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ChatBot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Route","Routes","Stable","ChatBot","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/priya/Desktop/try/chatvision-web/src/App.js"],"sourcesContent":["import * as React from 'react';\nimport {Route,Routes} from 'react-router-dom'\nimport Stable from './stable';\nimport ChatBot from './chatbot';\n\nexport default function App() {\n\n  return (\n    <>\n    <Routes>\n        <Route path='/stable' element={<Stable/>} />\n        <Route path='/' element={<ChatBot/>}/>\n    </Routes>\n\n    {/* <div className=\"flex flex-col h-screen\">\n      <Navbar/>\n      <div className=\"flex flex-col h-screen\">\n        <div className=\"flex-1 overflow-y-scroll\">\n        <div className=\"w-full max-w-screen-md mx-auto p-4\">\n          {messages\n          .filter((message) =>message.role !== \"system\")\n          .map((message,idx) => (\n            <div key = {idx} className=\"my-3\">\n              <div className=\"font-bold\">{message.role === \"user\"?\"You\" : \"ChatVision\"}</div>\n                <div className=\"text-lg prose\">\n                  <ReactMarkdown>{message.content}</ReactMarkdown>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n        \n        <div className=\"mx-auto w-full max-w-screen-md px-4 pt-0 pb-2 flex\">\n          <textarea value={userMessage} onChange={(e) => setUserMessage(e.target.value)} className=\"border rounded-md text-lg p-2 flex-1\" rows={1}placeholder=\"Type your query\" />\n          <button onClick={sendReq} className=\"border rounded-md bg-blue-500 hover:bg-blue-600 text-white px-4 ml-2\">Click</button>\n          \n          <Link to=\"/stable\">Stable</Link>\n        </div>\n      </div> */}\n\n    </>\n  );\n}\n\n\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,KAAK,EAACC,MAAM,QAAO,kBAAkB;AAC7C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACAJ,OAAA,CAACJ,MAAM;MAAAQ,QAAA,gBACHJ,OAAA,CAACL,KAAK;QAACU,IAAI,EAAC,SAAS;QAACC,OAAO,eAAEN,OAAA,CAACH,MAAM;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5CV,OAAA,CAACL,KAAK;QAACU,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEN,OAAA,CAACF,OAAO;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC,gBA6BP,CAAC;AAEP;AAACC,EAAA,GAtCuBR,GAAG;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}