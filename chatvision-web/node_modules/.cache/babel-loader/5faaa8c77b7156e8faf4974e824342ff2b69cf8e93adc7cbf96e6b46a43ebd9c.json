{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Desktop\\\\try\\\\chatvision-web\\\\src\\\\stable.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Stable() {\n  _s();\n  const [urls, setUrl] = useState([]);\n  const [prompt, setPrompt] = useState(\"\");\n  const {\n    Configuration,\n    OpenAIApi\n  } = require(\"openai\");\n  const configuration = new Configuration({\n    apiKey: \"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\"\n  });\n  const sendPrompt = async () => {\n    const openai = new OpenAIApi(configuration);\n    try {\n      const response = await openai.createImage({\n        prompt: prompt,\n        n: 4,\n        size: \"1024x1024\"\n      });\n      const image_urls = [{\n        idx: 0,\n        url: response['data']['data'][0]['url']\n      }, {\n        idx: 1,\n        url: response['data']['data'][1]['url']\n      }, {\n        idx: 2,\n        url: response['data']['data'][2]['url']\n      }, {\n        idx: 3,\n        url: response['data']['data'][3]['url']\n      }];\n      setUrl(image_urls);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-4 h-screen\",\n      children: urls.map((source, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: source.url,\n          alt: \"Nothin\",\n          className: \"p-4 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" mx-auto w-full max-w-screen-md px-4 pt-0 pb-2 flex sticky bottom-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        className: \"border rounded-md text-lg p-2 flex-1\",\n        rows: 1,\n        placeholder: \"Type your query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendPrompt,\n        className: \"border rounded-md bg-blue-500 hover:bg-blue-600 text-white px-4 ml-2\",\n        children: \"Click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Stable, \"aBHt/K5xkXy5LBqCbCPIJlqBx0s=\");\n_c = Stable;\nvar _c;\n$RefreshReg$(_c, \"Stable\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Stable","_s","urls","setUrl","prompt","setPrompt","Configuration","OpenAIApi","require","configuration","apiKey","sendPrompt","openai","response","createImage","n","size","image_urls","idx","url","error","console","log","children","className","map","source","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/priya/Desktop/try/chatvision-web/src/stable.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function Stable(){\r\n\r\n    const [urls,setUrl] = useState([]);\r\n    const [prompt,setPrompt] = useState(\"\");\r\n\r\n    const { Configuration, OpenAIApi } = require(\"openai\");\r\n    const configuration = new Configuration({\r\n        apiKey: \"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\",\r\n    });\r\n    const sendPrompt = async () =>{\r\n\r\n        const openai = new OpenAIApi(configuration);\r\n        try{\r\n            const response = await openai.createImage({\r\n            prompt: prompt,\r\n            n: 4,\r\n            size: \"1024x1024\",\r\n            });\r\n            const image_urls = [\r\n                {\r\n                    idx:0,\r\n                    url:response['data']['data'][0]['url']\r\n                },\r\n                {\r\n                    idx:1,\r\n                    url:response['data']['data'][1]['url']\r\n                },\r\n                {\r\n                    idx:2,\r\n                    url:response['data']['data'][2]['url']\r\n                },\r\n                {\r\n                    idx:3,\r\n                    url:response['data']['data'][3]['url']\r\n                }\r\n            ];\r\n            setUrl(image_urls);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"grid grid-cols-4 h-screen\">\r\n                {urls.map((source,idx) => (\r\n                <div key={idx} className=\"my-3\">\r\n                    <img src={source.url} alt=\"Nothin\" className=\"p-4 w-full\"/>\r\n                </div>\r\n                ))}\r\n        </div>\r\n        <div className=\" mx-auto w-full max-w-screen-md px-4 pt-0 pb-2 flex sticky bottom-0\">\r\n          <textarea value={prompt} onChange={(e) => setPrompt(e.target.value)} className=\"border rounded-md text-lg p-2 flex-1\" rows={1}placeholder=\"Type your query\" />\r\n          <button onClick={sendPrompt} className=\"border rounded-md bg-blue-500 hover:bg-blue-600 text-white px-4 ml-2\">Click</button>\r\n        </div>\r\n        </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}