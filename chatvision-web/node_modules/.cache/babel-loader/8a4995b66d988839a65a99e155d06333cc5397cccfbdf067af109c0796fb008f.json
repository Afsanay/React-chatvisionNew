{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Desktop\\\\try\\\\chatvision-web\\\\src\\\\App.js\";\nimport * as React from 'react';\nimport { Button, Grid, TextField, Stack, Box, AppBar, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  // const [userMessage,setUserMessage] = React.useState(\"\");\n  // const logging = async () => {\n  //   console.log(userMessage);\n  //   setUserMessage(\"hello\");\n  //   console.log(userMessage);\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        children: \" Hello World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'grid',\n          gridAutoColumns: '1fr',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"filled\",\n          sx: {\n            gridRow: '2',\n            gridColumn: 'span 4'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            gridRow: '2',\n            gridColumn: '5 / 6'\n          },\n          children: \"4 / 5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Button","Grid","TextField","Stack","Box","AppBar","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","gridAutoColumns","gap","gridRow","gridColumn","_c","$RefreshReg$"],"sources":["C:/Users/priya/Desktop/try/chatvision-web/src/App.js"],"sourcesContent":["import * as React from 'react';\nimport { Button, Grid, TextField,Stack, Box, AppBar, Typography } from '@mui/material';\n\nexport default function App() {\n  // const [userMessage,setUserMessage] = React.useState(\"\");\n  // const logging = async () => {\n  //   console.log(userMessage);\n  //   setUserMessage(\"hello\");\n  //   console.log(userMessage);\n  // }\n  return (\n    <>\n      <AppBar>\n        <Typography variant='h1'> Hello World</Typography>\n      <Box\n        sx={{\n          display: 'grid',\n          gridAutoColumns: '1fr',\n          gap: 1,\n        }}\n      >\n        <TextField variant='filled' sx={{ gridRow: '2', gridColumn: 'span 4' }}></TextField>\n        <Button sx={{ gridRow: '2', gridColumn: '5 / 6' }}>4 / 5</Button>\n      </Box>\n      </AppBar>\n    </>\n  );\n}\n\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAACC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvF,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACEJ,OAAA,CAACH,MAAM;MAAAO,QAAA,gBACLJ,OAAA,CAACF,UAAU;QAACO,OAAO,EAAC,IAAI;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACpDT,OAAA,CAACJ,GAAG;QACFc,EAAE,EAAE;UACFC,OAAO,EAAE,MAAM;UACfC,eAAe,EAAE,KAAK;UACtBC,GAAG,EAAE;QACP,CAAE;QAAAT,QAAA,gBAEFJ,OAAA,CAACN,SAAS;UAACW,OAAO,EAAC,QAAQ;UAACK,EAAE,EAAE;YAAEI,OAAO,EAAE,GAAG;YAAEC,UAAU,EAAE;UAAS;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACpFT,OAAA,CAACR,MAAM;UAACkB,EAAE,EAAE;YAAEI,OAAO,EAAE,GAAG;YAAEC,UAAU,EAAE;UAAQ,CAAE;UAAAX,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACT,CAAC;AAEP;AAACO,EAAA,GAxBuBb,GAAG;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}