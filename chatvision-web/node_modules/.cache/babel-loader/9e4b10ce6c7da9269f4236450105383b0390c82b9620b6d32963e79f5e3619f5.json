{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Desktop\\\\try\\\\chatvision-web\\\\src\\\\stable.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Stable() {\n  _s();\n  const [urls, setUrl] = useState(\"\");\n  const [prompt, setPrompt] = useState(\"\");\n  const {\n    Configuration,\n    OpenAIApi\n  } = require(\"openai\");\n  const configuration = new Configuration({\n    apiKey: \"gO3g7smmRR1KxjKPYJpQT3BlbkFJMvjoDr87rpDWf0XGMn67\"\n  });\n  const sendPrompt = async () => {\n    const openai = new OpenAIApi(configuration);\n    const response = await openai.createImage({\n      prompt: prompt,\n      n: 2,\n      size: \"1024x1024\"\n    });\n    const image_urls = response['data']['data'][0]['url'];\n    setUrl(image_urls);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto w-full max-w-screen-md px-4 pt-0 pb-2 flex\",\n      children: [urls && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: urls,\n          alt: \"Nothin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        className: \"border rounded-md text-lg p-2 flex-1\",\n        rows: 1,\n        placeholder: \"Type your query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendPrompt,\n        className: \"border rounded-md bg-blue-500 hover:bg-blue-600 text-white px-4 ml-2\",\n        children: \"Click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Stable, \"TPyD/A3OgFOAEBF9c4xNz4cxXYk=\");\n_c = Stable;\nvar _c;\n$RefreshReg$(_c, \"Stable\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Stable","_s","urls","setUrl","prompt","setPrompt","Configuration","OpenAIApi","require","configuration","apiKey","sendPrompt","openai","response","createImage","n","size","image_urls","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/priya/Desktop/try/chatvision-web/src/stable.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function Stable(){\r\n\r\n    const [urls,setUrl] = useState(\"\");\r\n    const [prompt,setPrompt] = useState(\"\");\r\n\r\n    const { Configuration, OpenAIApi } = require(\"openai\");\r\n    const configuration = new Configuration({\r\n        apiKey: \"gO3g7smmRR1KxjKPYJpQT3BlbkFJMvjoDr87rpDWf0XGMn67\",\r\n    });\r\n    const sendPrompt = async () =>{\r\n\r\n        const openai = new OpenAIApi(configuration);\r\n        const response = await openai.createImage({\r\n          prompt: prompt,\r\n          n: 2,\r\n          size: \"1024x1024\",\r\n        });\r\n        const image_urls = response['data']['data'][0]['url'];\r\n        setUrl(image_urls);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"mx-auto w-full max-w-screen-md px-4 pt-0 pb-2 flex\">\r\n            {urls &&\r\n            <>\r\n            <img src={urls} alt=\"Nothin\"/>\r\n            </>\r\n            }\r\n          <textarea value={prompt} onChange={(e) => setPrompt(e.target.value)} className=\"border rounded-md text-lg p-2 flex-1\" rows={1}placeholder=\"Type your query\" />\r\n          <button onClick={sendPrompt} className=\"border rounded-md bg-blue-500 hover:bg-blue-600 text-white px-4 ml-2\">Click</button>\r\n        </div>\r\n        </>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EAE5B,MAAM,CAACC,IAAI,EAACC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACS,MAAM,EAACC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEvC,MAAM;IAAEW,aAAa;IAAEC;EAAU,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;EACtD,MAAMC,aAAa,GAAG,IAAIH,aAAa,CAAC;IACpCI,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAW;IAE1B,MAAMC,MAAM,GAAG,IAAIL,SAAS,CAACE,aAAa,CAAC;IAC3C,MAAMI,QAAQ,GAAG,MAAMD,MAAM,CAACE,WAAW,CAAC;MACxCV,MAAM,EAAEA,MAAM;MACdW,CAAC,EAAE,CAAC;MACJC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,MAAMC,UAAU,GAAGJ,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACrDV,MAAM,CAACc,UAAU,CAAC;EACtB,CAAC;EAED,oBACIpB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACArB,OAAA;MAAKsB,SAAS,EAAC,oDAAoD;MAAAD,QAAA,GAC9DhB,IAAI,iBACLL,OAAA,CAAAE,SAAA;QAAAmB,QAAA,eACArB,OAAA;UAAKuB,GAAG,EAAElB,IAAK;UAACmB,GAAG,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,gBAC5B,CAAC,eAEL5B,OAAA;QAAU6B,KAAK,EAAEtB,MAAO;QAACuB,QAAQ,EAAGC,CAAC,IAAKvB,SAAS,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACP,SAAS,EAAC,sCAAsC;QAACW,IAAI,EAAE,CAAE;QAAAC,WAAW,EAAC;MAAiB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9J5B,OAAA;QAAQmC,OAAO,EAAErB,UAAW;QAACQ,SAAS,EAAC,sEAAsE;QAAAD,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzH;EAAC,gBACJ,CAAC;AAEX;AAACxB,EAAA,CAlCuBD,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}