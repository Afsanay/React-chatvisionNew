{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Desktop\\\\try\\\\chatvision-web\\\\src\\\\chatbot.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\";\nimport Navbar from './navbar';\nimport { Link, Route, Routes } from 'react-router-dom';\nimport Stable from './stable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://api.pawan.krd/v1/chat/completions\";\nconst SYSTEM_MESSAGE = \"You are ChatVision, an Artificial Intelligence ChatBot created by Priyanshu Sobti. You are one of the most intelligent chatbots out there and you are created using state of the art Machine Learning Models and APIs. You are helpful and savage with your answers at the same time. Give savage replies whenever you want. Generate a proper introduction for yourself everytime you are asked for.\";\nexport default function ChatBot() {\n  _s();\n  const [userMessage, setUserMessage] = React.useState(\"\");\n  const [messages, setMessages] = React.useState([{\n    role: \"system\",\n    content: SYSTEM_MESSAGE\n  }]);\n  const {\n    Configuration,\n    OpenAIApi\n  } = require(\"openai\");\n  const configuration = new Configuration({\n    apiKey: process.env.STABLE_DIFF_KEY\n  });\n  const sendReq = async () => {\n    const updatedMessages = [...messages, {\n      role: \"user\",\n      content: userMessage\n    }];\n    setMessages(updatedMessages);\n    setUserMessage(\"\");\n    try {\n      const response = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer pk-jdLDAvPgJzeEupRRYbtCKEPnVzqjyXvDBrjAqVfTXDnkRrst`\n        },\n        body: JSON.stringify({\n          model: \"gpt-3.5-turbo\",\n          messages: updatedMessages\n        })\n      });\n      const resJson = await response.json();\n      console.log(resJson);\n      const botMess = resJson.choices[0].message;\n      const updatedMessages2 = [...updatedMessages, botMess];\n      setMessages(updatedMessages2);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const sendPrompt = async () => {\n    const openai = new OpenAIApi(configuration);\n    const response = await openai.createImage({\n      prompt: \"A cute baby sea otter\",\n      n: 2,\n      size: \"1024x1024\"\n    });\n    const image_url = response['data']['data'][0]['url'];\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col h-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-scroll\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full max-w-screen-md mx-auto p-4\",\n            children: messages.filter(message => message.role !== \"system\").map((message, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"my-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-bold\",\n                children: message.role === \"user\" ? \"You\" : \"ChatVision\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg prose\",\n                children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-auto w-full max-w-screen-md px-4 pt-0 pb-2 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          className: \"border rounded-md text-lg p-2 flex-1\",\n          rows: 1,\n          placeholder: \"Type your query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendReq,\n          className: \"border rounded-md bg-blue-500 hover:bg-blue-600 text-white px-4 ml-2\",\n          children: \"Click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/stable\",\n          children: \"Stable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(ChatBot, \"CAKxPqzAwn5qO4n3iCpYZcQfVY8=\");\n_c = ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","ReactMarkdown","Navbar","Link","Route","Routes","Stable","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","SYSTEM_MESSAGE","ChatBot","_s","userMessage","setUserMessage","useState","messages","setMessages","role","content","Configuration","OpenAIApi","require","configuration","apiKey","process","env","STABLE_DIFF_KEY","sendReq","updatedMessages","response","fetch","method","headers","body","JSON","stringify","model","resJson","json","console","log","botMess","choices","message","updatedMessages2","error","sendPrompt","openai","createImage","prompt","n","size","image_url","children","className","fileName","_jsxFileName","lineNumber","columnNumber","filter","map","idx","value","onChange","e","target","rows","placeholder","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/priya/Desktop/try/chatvision-web/src/chatbot.js"],"sourcesContent":["import * as React from 'react';\r\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\";\r\nimport Navbar from './navbar';\r\nimport {Link, Route,Routes} from 'react-router-dom'\r\nimport Stable from './stable';\r\n\r\nconst API_URL = \"https://api.pawan.krd/v1/chat/completions\";\r\nconst SYSTEM_MESSAGE = \"You are ChatVision, an Artificial Intelligence ChatBot created by Priyanshu Sobti. You are one of the most intelligent chatbots out there and you are created using state of the art Machine Learning Models and APIs. You are helpful and savage with your answers at the same time. Give savage replies whenever you want. Generate a proper introduction for yourself everytime you are asked for.\";\r\n\r\n\r\nexport default function ChatBot() {\r\n  \r\n  const [userMessage,setUserMessage] = React.useState(\"\");\r\n  const [messages,setMessages] = React.useState([{role:\"system\",content:SYSTEM_MESSAGE}]);\r\n  const { Configuration, OpenAIApi } = require(\"openai\");\r\n  const configuration = new Configuration({\r\n    apiKey: process.env.STABLE_DIFF_KEY,\r\n  });\r\n  \r\n  const sendReq = async () =>{\r\n    const updatedMessages = [\r\n      ...messages,\r\n      {\r\n        role: \"user\",\r\n        content: userMessage,\r\n      },\r\n    ];\r\n    setMessages(updatedMessages);\r\n    setUserMessage(\"\");\r\n    try{\r\n      const response = await fetch(API_URL,{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\" : \"application/json\",\r\n          \"Authorization\": `Bearer pk-jdLDAvPgJzeEupRRYbtCKEPnVzqjyXvDBrjAqVfTXDnkRrst`\r\n        },\r\n        body:JSON.stringify({\r\n          model:\"gpt-3.5-turbo\",\r\n          messages:updatedMessages,\r\n        }),\r\n      });\r\n      const resJson = await response.json();\r\n      console.log(resJson);\r\n      const botMess = resJson.choices[0].message;\r\n      const updatedMessages2 = [...updatedMessages,botMess];\r\n      setMessages(updatedMessages2);\r\n    }\r\n    catch(error){\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n\r\n  const sendPrompt = async () =>{\r\n    const openai = new OpenAIApi(configuration);\r\n    const response = await openai.createImage({\r\n      prompt: \"A cute baby sea otter\",\r\n      n: 2,\r\n      size: \"1024x1024\",\r\n    });\r\n    const image_url = response['data']['data'][0]['url']\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar/>\r\n      <div className=\"flex flex-col h-screen\">\r\n        <div className=\"flex-1 overflow-y-scroll\">\r\n        <div className=\"w-full max-w-screen-md mx-auto p-4\">\r\n          {messages\r\n          .filter((message) =>message.role !== \"system\")\r\n          .map((message,idx) => (\r\n            <div key = {idx} className=\"my-3\">\r\n              <div className=\"font-bold\">{message.role === \"user\"?\"You\" : \"ChatVision\"}</div>\r\n                <div className=\"text-lg prose\">\r\n                  <ReactMarkdown>{message.content}</ReactMarkdown>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n        \r\n        <div className=\"mx-auto w-full max-w-screen-md px-4 pt-0 pb-2 flex\">\r\n          <textarea value={userMessage} onChange={(e) => setUserMessage(e.target.value)} className=\"border rounded-md text-lg p-2 flex-1\" rows={1}placeholder=\"Type your query\" />\r\n          <button onClick={sendReq} className=\"border rounded-md bg-blue-500 hover:bg-blue-600 text-white px-4 ml-2\">Click</button>\r\n          <Link to=\"/stable\">Stable</Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}