{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Desktop\\\\try\\\\chatvision-web\\\\src\\\\App.js\";\nimport * as React from 'react';\nimport { Button, Grid, TextField, Stack, Box, AppBar, Typography, BottomNavigation } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://api.pawan.krd/v1/chat/completions\";\nconst SYSTEM_MESSAGE = \"You are ChatVision, an Artificial Intelligence ChatBot created by Priyanshu Sobti. You are one of the most intelligent chatbots out there and you are created using state of the art Machine Learning Models and APIs. You are helpful and savage with your answers at the same time. Give savage replies whenever you want. Generate a proper introduction for yourself everytime you are asked for.\";\nexport default function App() {\n  // const [userMessage,setUserMessage] = React.useState(\"\");\n  // const logging = async () => {\n  //   console.log(userMessage);\n  //   setUserMessage(\"hello\");\n  //   console.log(userMessage);\n  // }\n  const sendReq = async () => {\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer pk-jdLDAvPgJzeEupRRYbtCKEPnVzqjyXvDBrjAqVfTXDnkRrst`\n      },\n      body: JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          role: \"user\",\n          content: SYSTEM_MESSAGE\n        }]\n      })\n    });\n    const resJson = await response.json();\n    console.log(resJson);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \" Hello World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'grid',\n        height: \"650px\"\n      },\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      margin: '20px',\n      display: \"flex\",\n      sx: {\n        display: \"grid\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          gridColumn: '5/6'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          display: \"grid\"\n        },\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Button","Grid","TextField","Stack","Box","AppBar","Typography","BottomNavigation","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","SYSTEM_MESSAGE","App","sendReq","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","resJson","json","console","log","children","position","variant","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","height","margin","gridColumn","_c","$RefreshReg$"],"sources":["C:/Users/priya/Desktop/try/chatvision-web/src/App.js"],"sourcesContent":["import * as React from 'react';\nimport { Button, Grid, TextField,Stack, Box, AppBar, Typography, BottomNavigation } from '@mui/material';\n\n\nconst API_URL = \"https://api.pawan.krd/v1/chat/completions\";\nconst SYSTEM_MESSAGE = \"You are ChatVision, an Artificial Intelligence ChatBot created by Priyanshu Sobti. You are one of the most intelligent chatbots out there and you are created using state of the art Machine Learning Models and APIs. You are helpful and savage with your answers at the same time. Give savage replies whenever you want. Generate a proper introduction for yourself everytime you are asked for.\";\n\n\nexport default function App() {\n  // const [userMessage,setUserMessage] = React.useState(\"\");\n  // const logging = async () => {\n  //   console.log(userMessage);\n  //   setUserMessage(\"hello\");\n  //   console.log(userMessage);\n  // }\n  const sendReq = async () =>{\n      const response = await fetch(API_URL,{\n        method: \"POST\",\n        headers: {\n          \"Content-Type\" : \"application/json\",\n          \"Authorization\": `Bearer pk-jdLDAvPgJzeEupRRYbtCKEPnVzqjyXvDBrjAqVfTXDnkRrst`\n        },\n        body:JSON.stringify({\n          model:\"gpt-3.5-turbo\",\n          messages:[{role:\"user\",content:SYSTEM_MESSAGE}],\n        }),\n      });\n      const resJson = await response.json();\n      console.log(resJson);\n  }\n  return (\n    <>\n       <AppBar position='relative'>\n          <Typography variant='h3'> Hello World</Typography>\n        </AppBar>\n\n        {/*<main>\n          <Box display={'flex'} height={'65vh'} flex={1} justifyContent={'space-around'}>\n            <Typography>HEllo</Typography>\n          </Box>\n            <Box\n              display={'flex'}\n              sx={{\n                display: 'grid',\n                gap: 1,\n              }}\n              width={'75%'}\n              margin={'20px'}\n            >\n              <TextField variant='filled' sx={{ gridRow: '2', gridColumn: 'span 4' }}></TextField>\n              <Button variant='filled' sx={{ gridRow: '2', gridColumn: '5 / 6' }}>4 / 5</Button>\n            </Box>\n        </main> */}\n\n        <Box sx={{display:'grid',height:\"650px\"}}>\n          Hello\n        </Box>\n        <Box margin={'20px'} display={\"flex\"} sx={{display:\"grid\"}}>\n          <TextField sx={{gridColumn:'5/6'}}></TextField>\n          <Button variant='contained' sx={{display:\"grid\"}}>Hello</Button>\n        </Box>\n\n    </>\n  );\n}\n\n\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAACC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGzG,MAAMC,OAAO,GAAG,2CAA2C;AAC3D,MAAMC,cAAc,GAAG,uYAAuY;AAG9Z,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAW;IACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAC;MACnCM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAG,kBAAkB;QACnC,eAAe,EAAG;MACpB,CAAC;MACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;QAClBC,KAAK,EAAC,eAAe;QACrBC,QAAQ,EAAC,CAAC;UAACC,IAAI,EAAC,MAAM;UAACC,OAAO,EAACb;QAAc,CAAC;MAChD,CAAC;IACH,CAAC,CAAC;IACF,MAAMc,OAAO,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IACrCC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACxB,CAAC;EACD,oBACElB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACGtB,OAAA,CAACJ,MAAM;MAAC2B,QAAQ,EAAC,UAAU;MAAAD,QAAA,eACxBtB,OAAA,CAACH,UAAU;QAAC2B,OAAO,EAAC,IAAI;QAAAF,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAoBT5B,OAAA,CAACL,GAAG;MAACkC,EAAE,EAAE;QAACC,OAAO,EAAC,MAAM;QAACC,MAAM,EAAC;MAAO,CAAE;MAAAT,QAAA,EAAC;IAE1C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN5B,OAAA,CAACL,GAAG;MAACqC,MAAM,EAAE,MAAO;MAACF,OAAO,EAAE,MAAO;MAACD,EAAE,EAAE;QAACC,OAAO,EAAC;MAAM,CAAE;MAAAR,QAAA,gBACzDtB,OAAA,CAACP,SAAS;QAACoC,EAAE,EAAE;UAACI,UAAU,EAAC;QAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC/C5B,OAAA,CAACT,MAAM;QAACiC,OAAO,EAAC,WAAW;QAACK,EAAE,EAAE;UAACC,OAAO,EAAC;QAAM,CAAE;QAAAR,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAAA,eAER,CAAC;AAEP;AAACM,EAAA,GAxDuB7B,GAAG;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}