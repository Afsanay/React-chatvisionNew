{"ast":null,"code":"\"use strict\";\n\nconst axios = require(\"axios\");\n// import formData from \"./formData.js\";\n// const Buffer = require('buffer/').Buffer; // note: the trailing slash is important!\n\nconst apiBaseUrl = require(\"./apiBaseUrl\").baseUrl;\nconst resultRendering = require(\"./resultRendering.js\");\nconst globalObject = Function(\"return this\")();\nif (globalObject.FormData) {\n  var formData = globalObject.FormData;\n} else {\n  var formData = eval('require(\"form-data\")');\n  // todo, find a better way to do this.\n}\n\n/**\n * Create a new instance of DeepAI\n *\n */\n\nfunction DeepAI() {\n  this.axiosInstance = axios.create({\n    headers: {\n      \"client-library\": \"deepai-js-client\"\n    }\n  });\n}\nDeepAI.prototype.setApiKey = function (apiKey) {\n  this.apiKey = apiKey;\n  this.axiosInstance.defaults.headers.common[\"api-key\"] = apiKey;\n};\nfunction urlForModel(model_name) {\n  return apiBaseUrl + \"/api/\" + model_name;\n}\nDeepAI.prototype.callStandardApi = async function request(model_name, inputs_object) {\n  const form = new formData();\n  for (var key of Object.keys(inputs_object)) {\n    // Second argument  can take Buffer or Stream (lazily read during the request) too.\n    // Third argument is filename if you want to simulate a file upload. Otherwise omit.\n    if (inputs_object[key] === null || inputs_object[key] === undefined) {\n      continue; // Input is blank, that is allowed sometimes.\n    }\n\n    if (typeof inputs_object[key] === \"string\") {\n      form.append(key, inputs_object[key]); // a string could be a URL or just some text data. both are OK\n    } else if (globalObject.Element && inputs_object[key] instanceof globalObject.Element) {\n      var element = inputs_object[key];\n      if (element.tagName === \"IMG\") {\n        // got an IMG dom node element\n\n        if (element.src) {\n          // pass the src url\n          form.append(key, element.src);\n\n          // TODO do something about data URLs\n          // TODO do something about blob URLs\n        } else {\n          throw new Error(\"DeepAI error: Image element has no SRC: \" + key);\n        }\n      } else if (element.tagName === \"INPUT\" && element.files !== undefined) {\n        // got a file picker\n        if (element.files.length > 0) {\n          form.append(key, element.files[0], \"file.jpeg\");\n        } else {\n          throw new Error(\"DeepAI error: File picker has no file picked: \" + key);\n        }\n      } else {\n        throw new Error(\"DeepAI error: DOM Element type for key: \" + key);\n      }\n    } else if (inputs_object[key].hasOwnProperty(\"fd\")) {\n      // Seems to be a nodejs stream.\n      form.append(key, inputs_object[key]); // form-data in nodejs can handle this\n    } else if (globalObject.Buffer && Buffer.isBuffer(inputs_object[key])) {\n      form.append(key, inputs_object[key], \"file.jpeg\"); // form-data in nodejs can handle this\n    } else {\n      throw new Error(\"DeepAI error: unknown input type for key: \" + key);\n    }\n    // TODO do filenames need to be unique?\n  }\n\n  var req_options = {\n    withCredentials: true\n  };\n  if (form.getHeaders !== undefined) {\n    // formData is the nodejs based subsitute, only needed for node.js\n    req_options.headers = form.getHeaders();\n  }\n  const response = await this.axiosInstance.post(urlForModel(model_name), form, req_options);\n  return response.data;\n};\nDeepAI.prototype.renderResultIntoElement = resultRendering.renderResultIntoElement;\nDeepAI.prototype.renderAnnotatedResultIntoElement = resultRendering.renderAnnotatedResultIntoElement;\nmodule.exports = DeepAI;","map":{"version":3,"names":["axios","require","apiBaseUrl","baseUrl","resultRendering","globalObject","Function","FormData","formData","eval","DeepAI","axiosInstance","create","headers","prototype","setApiKey","apiKey","defaults","common","urlForModel","model_name","callStandardApi","request","inputs_object","form","key","Object","keys","undefined","append","Element","element","tagName","src","Error","files","length","hasOwnProperty","Buffer","isBuffer","req_options","withCredentials","getHeaders","response","post","data","renderResultIntoElement","renderAnnotatedResultIntoElement","module","exports"],"sources":["C:/Users/priya/Desktop/try/chatvision-web/node_modules/deepai/lib/core/DeepAI.js"],"sourcesContent":["\"use strict\";\nconst axios = require(\"axios\");\n// import formData from \"./formData.js\";\n// const Buffer = require('buffer/').Buffer; // note: the trailing slash is important!\n\nconst apiBaseUrl = require(\"./apiBaseUrl\").baseUrl;\n\nconst resultRendering = require(\"./resultRendering.js\");\n\nconst globalObject = Function(\"return this\")();\n\nif (globalObject.FormData) {\n  var formData = globalObject.FormData;\n} else {\n  var formData = eval('require(\"form-data\")');\n  // todo, find a better way to do this.\n}\n\n/**\n * Create a new instance of DeepAI\n *\n */\n\nfunction DeepAI() {\n  this.axiosInstance = axios.create({\n    headers: { \"client-library\": \"deepai-js-client\" },\n  });\n}\n\nDeepAI.prototype.setApiKey = function (apiKey) {\n  this.apiKey = apiKey;\n  this.axiosInstance.defaults.headers.common[\"api-key\"] = apiKey;\n};\n\nfunction urlForModel(model_name) {\n  return apiBaseUrl + \"/api/\" + model_name;\n}\n\nDeepAI.prototype.callStandardApi = async function request(\n  model_name,\n  inputs_object\n) {\n  const form = new formData();\n  for (var key of Object.keys(inputs_object)) {\n    // Second argument  can take Buffer or Stream (lazily read during the request) too.\n    // Third argument is filename if you want to simulate a file upload. Otherwise omit.\n    if (inputs_object[key] === null || inputs_object[key] === undefined) {\n      continue; // Input is blank, that is allowed sometimes.\n    }\n\n    if (typeof inputs_object[key] === \"string\") {\n      form.append(key, inputs_object[key]); // a string could be a URL or just some text data. both are OK\n    } else if (\n      globalObject.Element &&\n      inputs_object[key] instanceof globalObject.Element\n    ) {\n      var element = inputs_object[key];\n      if (element.tagName === \"IMG\") {\n        // got an IMG dom node element\n\n        if (element.src) {\n          // pass the src url\n          form.append(key, element.src);\n\n          // TODO do something about data URLs\n          // TODO do something about blob URLs\n        } else {\n          throw new Error(\"DeepAI error: Image element has no SRC: \" + key);\n        }\n      } else if (element.tagName === \"INPUT\" && element.files !== undefined) {\n        // got a file picker\n        if (element.files.length > 0) {\n          form.append(key, element.files[0], \"file.jpeg\");\n        } else {\n          throw new Error(\n            \"DeepAI error: File picker has no file picked: \" + key\n          );\n        }\n      } else {\n        throw new Error(\"DeepAI error: DOM Element type for key: \" + key);\n      }\n    } else if (inputs_object[key].hasOwnProperty(\"fd\")) {\n      // Seems to be a nodejs stream.\n      form.append(key, inputs_object[key]); // form-data in nodejs can handle this\n    } else if (globalObject.Buffer && Buffer.isBuffer(inputs_object[key])) {\n      form.append(key, inputs_object[key], \"file.jpeg\"); // form-data in nodejs can handle this\n    } else {\n      throw new Error(\"DeepAI error: unknown input type for key: \" + key);\n    }\n    // TODO do filenames need to be unique?\n  }\n\n  var req_options = {\n    withCredentials: true,\n  };\n  if (form.getHeaders !== undefined) {\n    // formData is the nodejs based subsitute, only needed for node.js\n    req_options.headers = form.getHeaders();\n  }\n  const response = await this.axiosInstance.post(\n    urlForModel(model_name),\n    form,\n    req_options\n  );\n  return response.data;\n};\n\nDeepAI.prototype.renderResultIntoElement =\n  resultRendering.renderResultIntoElement;\nDeepAI.prototype.renderAnnotatedResultIntoElement =\n  resultRendering.renderAnnotatedResultIntoElement;\n\nmodule.exports = DeepAI;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}