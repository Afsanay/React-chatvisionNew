{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Desktop\\\\try\\\\chatvision-web\\\\src\\\\App.js\";\nimport * as React from 'react';\nimport { Button, Grid, TextField, Stack, Box, AppBar, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  // const [userMessage,setUserMessage] = React.useState(\"\");\n  // const logging = async () => {\n  //   console.log(userMessage);\n  //   setUserMessage(\"hello\");\n  //   console.log(userMessage);\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \" Hello World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            gridAutoColumns: '1fr',\n            gap: 100\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"filled\",\n            sx: {\n              gridRow: '2',\n              gridColumn: 'span 4'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"filled\",\n            sx: {\n              gridRow: '2',\n              gridColumn: '5 / 6'\n            },\n            children: \"4 / 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Button","Grid","TextField","Stack","Box","AppBar","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","gridAutoColumns","gap","gridRow","gridColumn","_c","$RefreshReg$"],"sources":["C:/Users/priya/Desktop/try/chatvision-web/src/App.js"],"sourcesContent":["import * as React from 'react';\nimport { Button, Grid, TextField,Stack, Box, AppBar, Typography } from '@mui/material';\n\nexport default function App() {\n  // const [userMessage,setUserMessage] = React.useState(\"\");\n  // const logging = async () => {\n  //   console.log(userMessage);\n  //   setUserMessage(\"hello\");\n  //   console.log(userMessage);\n  // }\n  return (\n    <>\n        <AppBar>\n          <Typography variant='h6'> Hello World</Typography>\n        </AppBar>\n        <main>\n          <div>\n            <Box\n              sx={{\n                display: 'grid',\n                gridAutoColumns: '1fr',\n                gap: 100,\n              }}\n            >\n              <TextField variant='filled' sx={{ gridRow: '2', gridColumn: 'span 4' }}></TextField>\n              <Button variant='filled' sx={{ gridRow: '2', gridColumn: '5 / 6' }}>4 / 5</Button>\n            </Box>\n          </div>\n        </main>\n    </>\n  );\n}\n\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAACC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvF,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACIJ,OAAA,CAACH,MAAM;MAAAO,QAAA,eACLJ,OAAA,CAACF,UAAU;QAACO,OAAO,EAAC,IAAI;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACTT,OAAA;MAAAI,QAAA,eACEJ,OAAA;QAAAI,QAAA,eACEJ,OAAA,CAACJ,GAAG;UACFc,EAAE,EAAE;YACFC,OAAO,EAAE,MAAM;YACfC,eAAe,EAAE,KAAK;YACtBC,GAAG,EAAE;UACP,CAAE;UAAAT,QAAA,gBAEFJ,OAAA,CAACN,SAAS;YAACW,OAAO,EAAC,QAAQ;YAACK,EAAE,EAAE;cAAEI,OAAO,EAAE,GAAG;cAAEC,UAAU,EAAE;YAAS;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACpFT,OAAA,CAACR,MAAM;YAACa,OAAO,EAAC,QAAQ;YAACK,EAAE,EAAE;cAAEI,OAAO,EAAE,GAAG;cAAEC,UAAU,EAAE;YAAQ,CAAE;YAAAX,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACT,CAAC;AAEP;AAACO,EAAA,GA5BuBb,GAAG;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}